{
  "swagger": "2.0",
  "info": {
    "description": "This is a dynamic API generated by PostgREST",
    "title": "PostgREST API",
    "version": "12.0.2"
  },
  "host": "localhost:3000",
  "basePath": "/",
  "schemes": [
    "http"
  ],
  "consumes": [
    "application/json",
    "application/vnd.pgrst.object+json;nulls=stripped",
    "application/vnd.pgrst.object+json",
    "text/csv"
  ],
  "produces": [
    "application/json",
    "application/vnd.pgrst.object+json;nulls=stripped",
    "application/vnd.pgrst.object+json",
    "text/csv"
  ],
  "paths": {
    "/": {
      "get": {
        "tags": [
          "Introspection"
        ],
        "summary": "OpenAPI description (this document)",
        "produces": [
          "application/openapi+json",
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/notes": {
      "get": {
        "tags": [
          "notes"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/rowFilter.notes.id"
          },
          {
            "$ref": "#/parameters/rowFilter.notes.title"
          },
          {
            "$ref": "#/parameters/rowFilter.notes.content"
          },
          {
            "$ref": "#/parameters/rowFilter.notes.user_id"
          },
          {
            "$ref": "#/parameters/rowFilter.notes.created_at"
          },
          {
            "$ref": "#/parameters/select"
          },
          {
            "$ref": "#/parameters/order"
          },
          {
            "$ref": "#/parameters/range"
          },
          {
            "$ref": "#/parameters/rangeUnit"
          },
          {
            "$ref": "#/parameters/offset"
          },
          {
            "$ref": "#/parameters/limit"
          },
          {
            "$ref": "#/parameters/preferCount"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "items": {
                "$ref": "#/definitions/notes"
              },
              "type": "array"
            }
          },
          "206": {
            "description": "Partial Content"
          }
        }
      },
      "post": {
        "tags": [
          "notes"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/body.notes"
          },
          {
            "$ref": "#/parameters/select"
          },
          {
            "$ref": "#/parameters/preferPost"
          }
        ],
        "responses": {
          "201": {
            "description": "Created"
          }
        }
      },
      "delete": {
        "tags": [
          "notes"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/rowFilter.notes.id"
          },
          {
            "$ref": "#/parameters/rowFilter.notes.title"
          },
          {
            "$ref": "#/parameters/rowFilter.notes.content"
          },
          {
            "$ref": "#/parameters/rowFilter.notes.user_id"
          },
          {
            "$ref": "#/parameters/rowFilter.notes.created_at"
          },
          {
            "$ref": "#/parameters/preferReturn"
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          }
        }
      },
      "patch": {
        "tags": [
          "notes"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/rowFilter.notes.id"
          },
          {
            "$ref": "#/parameters/rowFilter.notes.title"
          },
          {
            "$ref": "#/parameters/rowFilter.notes.content"
          },
          {
            "$ref": "#/parameters/rowFilter.notes.user_id"
          },
          {
            "$ref": "#/parameters/rowFilter.notes.created_at"
          },
          {
            "$ref": "#/parameters/body.notes"
          },
          {
            "$ref": "#/parameters/preferReturn"
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          }
        }
      }
    },
    "/rpc/search_users": {
      "get": {
        "tags": [
          "(rpc) search_users"
        ],
        "produces": [
          "application/json",
          "application/vnd.pgrst.object+json;nulls=stripped",
          "application/vnd.pgrst.object+json"
        ],
        "parameters": [
          {
            "format": "text",
            "in": "query",
            "name": "search_term",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "post": {
        "tags": [
          "(rpc) search_users"
        ],
        "produces": [
          "application/json",
          "application/vnd.pgrst.object+json;nulls=stripped",
          "application/vnd.pgrst.object+json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "args",
            "required": true,
            "schema": {
              "properties": {
                "search_term": {
                  "format": "text",
                  "type": "string"
                }
              },
              "required": [
                "search_term"
              ],
              "type": "object"
            }
          },
          {
            "$ref": "#/parameters/preferParams"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/rpc/list_all_function_apis": {
      "get": {
        "tags": [
          "(rpc) list_all_function_apis"
        ],
        "produces": [
          "application/json",
          "application/vnd.pgrst.object+json;nulls=stripped",
          "application/vnd.pgrst.object+json"
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "post": {
        "tags": [
          "(rpc) list_all_function_apis"
        ],
        "produces": [
          "application/json",
          "application/vnd.pgrst.object+json;nulls=stripped",
          "application/vnd.pgrst.object+json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "args",
            "required": true,
            "schema": {
              "type": "object"
            }
          },
          {
            "$ref": "#/parameters/preferParams"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/rpc/get_all_users": {
      "get": {
        "tags": [
          "(rpc) get_all_users"
        ],
        "produces": [
          "application/json",
          "application/vnd.pgrst.object+json;nulls=stripped",
          "application/vnd.pgrst.object+json"
        ],
        "parameters": [
          {
            "format": "integer",
            "in": "query",
            "name": "page_size",
            "required": false,
            "type": "integer"
          },
          {
            "format": "integer",
            "in": "query",
            "name": "page_number",
            "required": false,
            "type": "integer"
          },
          {
            "format": "text",
            "in": "query",
            "name": "search_term",
            "required": false,
            "type": "string"
          },
          {
            "format": "text",
            "in": "query",
            "name": "filter_role",
            "required": false,
            "type": "string"
          },
          {
            "format": "text",
            "in": "query",
            "name": "filter_status",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "post": {
        "tags": [
          "(rpc) get_all_users"
        ],
        "produces": [
          "application/json",
          "application/vnd.pgrst.object+json;nulls=stripped",
          "application/vnd.pgrst.object+json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "args",
            "required": true,
            "schema": {
              "properties": {
                "filter_role": {
                  "format": "text",
                  "type": "string"
                },
                "filter_status": {
                  "format": "text",
                  "type": "string"
                },
                "page_number": {
                  "format": "integer",
                  "type": "integer"
                },
                "page_size": {
                  "format": "integer",
                  "type": "integer"
                },
                "search_term": {
                  "format": "text",
                  "type": "string"
                }
              },
              "type": "object"
            }
          },
          {
            "$ref": "#/parameters/preferParams"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/rpc/generate_complete_api_docs": {
      "get": {
        "tags": [
          "(rpc) generate_complete_api_docs"
        ],
        "produces": [
          "application/json",
          "application/vnd.pgrst.object+json;nulls=stripped",
          "application/vnd.pgrst.object+json"
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "post": {
        "tags": [
          "(rpc) generate_complete_api_docs"
        ],
        "produces": [
          "application/json",
          "application/vnd.pgrst.object+json;nulls=stripped",
          "application/vnd.pgrst.object+json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "args",
            "required": true,
            "schema": {
              "type": "object"
            }
          },
          {
            "$ref": "#/parameters/preferParams"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/rpc/get_user_profile": {
      "get": {
        "tags": [
          "(rpc) get_user_profile"
        ],
        "produces": [
          "application/json",
          "application/vnd.pgrst.object+json;nulls=stripped",
          "application/vnd.pgrst.object+json"
        ],
        "parameters": [
          {
            "format": "integer",
            "in": "query",
            "name": "user_id",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "post": {
        "tags": [
          "(rpc) get_user_profile"
        ],
        "produces": [
          "application/json",
          "application/vnd.pgrst.object+json;nulls=stripped",
          "application/vnd.pgrst.object+json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "args",
            "required": true,
            "schema": {
              "properties": {
                "user_id": {
                  "format": "integer",
                  "type": "integer"
                }
              },
              "required": [
                "user_id"
              ],
              "type": "object"
            }
          },
          {
            "$ref": "#/parameters/preferParams"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/rpc/get_api_inventory": {
      "get": {
        "tags": [
          "(rpc) get_api_inventory"
        ],
        "produces": [
          "application/json",
          "application/vnd.pgrst.object+json;nulls=stripped",
          "application/vnd.pgrst.object+json"
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "post": {
        "tags": [
          "(rpc) get_api_inventory"
        ],
        "produces": [
          "application/json",
          "application/vnd.pgrst.object+json;nulls=stripped",
          "application/vnd.pgrst.object+json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "args",
            "required": true,
            "schema": {
              "type": "object"
            }
          },
          {
            "$ref": "#/parameters/preferParams"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/rpc/whoami": {
      "get": {
        "tags": [
          "(rpc) whoami"
        ],
        "produces": [
          "application/json",
          "application/vnd.pgrst.object+json;nulls=stripped",
          "application/vnd.pgrst.object+json"
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "post": {
        "tags": [
          "(rpc) whoami"
        ],
        "produces": [
          "application/json",
          "application/vnd.pgrst.object+json;nulls=stripped",
          "application/vnd.pgrst.object+json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "args",
            "required": true,
            "schema": {
              "type": "object"
            }
          },
          {
            "$ref": "#/parameters/preferParams"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/rpc/get_user_analytics": {
      "get": {
        "tags": [
          "(rpc) get_user_analytics"
        ],
        "produces": [
          "application/json",
          "application/vnd.pgrst.object+json;nulls=stripped",
          "application/vnd.pgrst.object+json"
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "post": {
        "tags": [
          "(rpc) get_user_analytics"
        ],
        "produces": [
          "application/json",
          "application/vnd.pgrst.object+json;nulls=stripped",
          "application/vnd.pgrst.object+json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "args",
            "required": true,
            "schema": {
              "type": "object"
            }
          },
          {
            "$ref": "#/parameters/preferParams"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/rpc/update_user_profile": {
      "get": {
        "tags": [
          "(rpc) update_user_profile"
        ],
        "produces": [
          "application/json",
          "application/vnd.pgrst.object+json;nulls=stripped",
          "application/vnd.pgrst.object+json"
        ],
        "parameters": [
          {
            "format": "integer",
            "in": "query",
            "name": "target_user_id",
            "required": true,
            "type": "integer"
          },
          {
            "format": "text",
            "in": "query",
            "name": "new_email",
            "required": false,
            "type": "string"
          },
          {
            "format": "text",
            "in": "query",
            "name": "new_first_name",
            "required": false,
            "type": "string"
          },
          {
            "format": "text",
            "in": "query",
            "name": "new_last_name",
            "required": false,
            "type": "string"
          },
          {
            "format": "text",
            "in": "query",
            "name": "new_phone",
            "required": false,
            "type": "string"
          },
          {
            "format": "text",
            "in": "query",
            "name": "new_avatar_url",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "post": {
        "tags": [
          "(rpc) update_user_profile"
        ],
        "produces": [
          "application/json",
          "application/vnd.pgrst.object+json;nulls=stripped",
          "application/vnd.pgrst.object+json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "args",
            "required": true,
            "schema": {
              "properties": {
                "new_avatar_url": {
                  "format": "text",
                  "type": "string"
                },
                "new_email": {
                  "format": "text",
                  "type": "string"
                },
                "new_first_name": {
                  "format": "text",
                  "type": "string"
                },
                "new_last_name": {
                  "format": "text",
                  "type": "string"
                },
                "new_phone": {
                  "format": "text",
                  "type": "string"
                },
                "target_user_id": {
                  "format": "integer",
                  "type": "integer"
                }
              },
              "required": [
                "target_user_id"
              ],
              "type": "object"
            }
          },
          {
            "$ref": "#/parameters/preferParams"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/rpc/calculate_user_discount": {
      "get": {
        "tags": [
          "(rpc) calculate_user_discount"
        ],
        "produces": [
          "application/json",
          "application/vnd.pgrst.object+json;nulls=stripped",
          "application/vnd.pgrst.object+json"
        ],
        "parameters": [
          {
            "format": "integer",
            "in": "query",
            "name": "user_id",
            "required": true,
            "type": "integer"
          },
          {
            "format": "numeric",
            "in": "query",
            "name": "order_amount",
            "required": true,
            "type": "number"
          },
          {
            "format": "text",
            "in": "query",
            "name": "discount_code",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "post": {
        "tags": [
          "(rpc) calculate_user_discount"
        ],
        "produces": [
          "application/json",
          "application/vnd.pgrst.object+json;nulls=stripped",
          "application/vnd.pgrst.object+json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "args",
            "required": true,
            "schema": {
              "properties": {
                "discount_code": {
                  "format": "text",
                  "type": "string"
                },
                "order_amount": {
                  "format": "numeric",
                  "type": "number"
                },
                "user_id": {
                  "format": "integer",
                  "type": "integer"
                }
              },
              "required": [
                "user_id",
                "order_amount"
              ],
              "type": "object"
            }
          },
          {
            "$ref": "#/parameters/preferParams"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/rpc/generate_function_openapi": {
      "get": {
        "tags": [
          "(rpc) generate_function_openapi"
        ],
        "produces": [
          "application/json",
          "application/vnd.pgrst.object+json;nulls=stripped",
          "application/vnd.pgrst.object+json"
        ],
        "parameters": [
          {
            "format": "text",
            "in": "query",
            "name": "function_name",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "post": {
        "tags": [
          "(rpc) generate_function_openapi"
        ],
        "produces": [
          "application/json",
          "application/vnd.pgrst.object+json;nulls=stripped",
          "application/vnd.pgrst.object+json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "args",
            "required": true,
            "schema": {
              "properties": {
                "function_name": {
                  "format": "text",
                  "type": "string"
                }
              },
              "type": "object"
            }
          },
          {
            "$ref": "#/parameters/preferParams"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/rpc/reset_user_password": {
      "get": {
        "tags": [
          "(rpc) reset_user_password"
        ],
        "produces": [
          "application/json",
          "application/vnd.pgrst.object+json;nulls=stripped",
          "application/vnd.pgrst.object+json"
        ],
        "parameters": [
          {
            "format": "integer",
            "in": "query",
            "name": "target_user_id",
            "required": true,
            "type": "integer"
          },
          {
            "format": "text",
            "in": "query",
            "name": "new_password",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "post": {
        "tags": [
          "(rpc) reset_user_password"
        ],
        "produces": [
          "application/json",
          "application/vnd.pgrst.object+json;nulls=stripped",
          "application/vnd.pgrst.object+json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "args",
            "required": true,
            "schema": {
              "properties": {
                "new_password": {
                  "format": "text",
                  "type": "string"
                },
                "target_user_id": {
                  "format": "integer",
                  "type": "integer"
                }
              },
              "required": [
                "target_user_id",
                "new_password"
              ],
              "type": "object"
            }
          },
          {
            "$ref": "#/parameters/preferParams"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/rpc/deactivate_user": {
      "get": {
        "tags": [
          "(rpc) deactivate_user"
        ],
        "produces": [
          "application/json",
          "application/vnd.pgrst.object+json;nulls=stripped",
          "application/vnd.pgrst.object+json"
        ],
        "parameters": [
          {
            "format": "integer",
            "in": "query",
            "name": "target_user_id",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "post": {
        "tags": [
          "(rpc) deactivate_user"
        ],
        "produces": [
          "application/json",
          "application/vnd.pgrst.object+json;nulls=stripped",
          "application/vnd.pgrst.object+json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "args",
            "required": true,
            "schema": {
              "properties": {
                "target_user_id": {
                  "format": "integer",
                  "type": "integer"
                }
              },
              "required": [
                "target_user_id"
              ],
              "type": "object"
            }
          },
          {
            "$ref": "#/parameters/preferParams"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/rpc/change_password": {
      "get": {
        "tags": [
          "(rpc) change_password"
        ],
        "produces": [
          "application/json",
          "application/vnd.pgrst.object+json;nulls=stripped",
          "application/vnd.pgrst.object+json"
        ],
        "parameters": [
          {
            "format": "text",
            "in": "query",
            "name": "current_password",
            "required": true,
            "type": "string"
          },
          {
            "format": "text",
            "in": "query",
            "name": "new_password",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "post": {
        "tags": [
          "(rpc) change_password"
        ],
        "produces": [
          "application/json",
          "application/vnd.pgrst.object+json;nulls=stripped",
          "application/vnd.pgrst.object+json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "args",
            "required": true,
            "schema": {
              "properties": {
                "current_password": {
                  "format": "text",
                  "type": "string"
                },
                "new_password": {
                  "format": "text",
                  "type": "string"
                }
              },
              "required": [
                "current_password",
                "new_password"
              ],
              "type": "object"
            }
          },
          {
            "$ref": "#/parameters/preferParams"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/rpc/get_user_activity": {
      "get": {
        "tags": [
          "(rpc) get_user_activity"
        ],
        "produces": [
          "application/json",
          "application/vnd.pgrst.object+json;nulls=stripped",
          "application/vnd.pgrst.object+json"
        ],
        "parameters": [
          {
            "format": "integer",
            "in": "query",
            "name": "target_user_id",
            "required": false,
            "type": "integer"
          },
          {
            "format": "integer",
            "in": "query",
            "name": "limit_count",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "post": {
        "tags": [
          "(rpc) get_user_activity"
        ],
        "produces": [
          "application/json",
          "application/vnd.pgrst.object+json;nulls=stripped",
          "application/vnd.pgrst.object+json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "args",
            "required": true,
            "schema": {
              "properties": {
                "limit_count": {
                  "format": "integer",
                  "type": "integer"
                },
                "target_user_id": {
                  "format": "integer",
                  "type": "integer"
                }
              },
              "type": "object"
            }
          },
          {
            "$ref": "#/parameters/preferParams"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/rpc/update_my_profile": {
      "get": {
        "tags": [
          "(rpc) update_my_profile"
        ],
        "produces": [
          "application/json",
          "application/vnd.pgrst.object+json;nulls=stripped",
          "application/vnd.pgrst.object+json"
        ],
        "parameters": [
          {
            "format": "text",
            "in": "query",
            "name": "new_first_name",
            "required": false,
            "type": "string"
          },
          {
            "format": "text",
            "in": "query",
            "name": "new_last_name",
            "required": false,
            "type": "string"
          },
          {
            "format": "text",
            "in": "query",
            "name": "new_phone",
            "required": false,
            "type": "string"
          },
          {
            "format": "text",
            "in": "query",
            "name": "new_avatar_url",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "post": {
        "tags": [
          "(rpc) update_my_profile"
        ],
        "produces": [
          "application/json",
          "application/vnd.pgrst.object+json;nulls=stripped",
          "application/vnd.pgrst.object+json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "args",
            "required": true,
            "schema": {
              "properties": {
                "new_avatar_url": {
                  "format": "text",
                  "type": "string"
                },
                "new_first_name": {
                  "format": "text",
                  "type": "string"
                },
                "new_last_name": {
                  "format": "text",
                  "type": "string"
                },
                "new_phone": {
                  "format": "text",
                  "type": "string"
                }
              },
              "type": "object"
            }
          },
          {
            "$ref": "#/parameters/preferParams"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/rpc/activate_user": {
      "get": {
        "tags": [
          "(rpc) activate_user"
        ],
        "produces": [
          "application/json",
          "application/vnd.pgrst.object+json;nulls=stripped",
          "application/vnd.pgrst.object+json"
        ],
        "parameters": [
          {
            "format": "integer",
            "in": "query",
            "name": "target_user_id",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "post": {
        "tags": [
          "(rpc) activate_user"
        ],
        "produces": [
          "application/json",
          "application/vnd.pgrst.object+json;nulls=stripped",
          "application/vnd.pgrst.object+json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "args",
            "required": true,
            "schema": {
              "properties": {
                "target_user_id": {
                  "format": "integer",
                  "type": "integer"
                }
              },
              "required": [
                "target_user_id"
              ],
              "type": "object"
            }
          },
          {
            "$ref": "#/parameters/preferParams"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/rpc/change_user_role": {
      "get": {
        "tags": [
          "(rpc) change_user_role"
        ],
        "produces": [
          "application/json",
          "application/vnd.pgrst.object+json;nulls=stripped",
          "application/vnd.pgrst.object+json"
        ],
        "parameters": [
          {
            "format": "integer",
            "in": "query",
            "name": "target_user_id",
            "required": true,
            "type": "integer"
          },
          {
            "format": "text",
            "in": "query",
            "name": "new_role",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "post": {
        "tags": [
          "(rpc) change_user_role"
        ],
        "produces": [
          "application/json",
          "application/vnd.pgrst.object+json;nulls=stripped",
          "application/vnd.pgrst.object+json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "args",
            "required": true,
            "schema": {
              "properties": {
                "new_role": {
                  "format": "text",
                  "type": "string"
                },
                "target_user_id": {
                  "format": "integer",
                  "type": "integer"
                }
              },
              "required": [
                "target_user_id",
                "new_role"
              ],
              "type": "object"
            }
          },
          {
            "$ref": "#/parameters/preferParams"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/rpc/bulk_user_operations": {
      "get": {
        "tags": [
          "(rpc) bulk_user_operations"
        ],
        "produces": [
          "application/json",
          "application/vnd.pgrst.object+json;nulls=stripped",
          "application/vnd.pgrst.object+json"
        ],
        "parameters": [
          {
            "format": "integer[]",
            "in": "query",
            "name": "user_ids",
            "required": true,
            "type": "string"
          },
          {
            "format": "text",
            "in": "query",
            "name": "operation",
            "required": true,
            "type": "string"
          },
          {
            "format": "text",
            "in": "query",
            "name": "operation_value",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "post": {
        "tags": [
          "(rpc) bulk_user_operations"
        ],
        "produces": [
          "application/json",
          "application/vnd.pgrst.object+json;nulls=stripped",
          "application/vnd.pgrst.object+json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "args",
            "required": true,
            "schema": {
              "properties": {
                "operation": {
                  "format": "text",
                  "type": "string"
                },
                "operation_value": {
                  "format": "text",
                  "type": "string"
                },
                "user_ids": {
                  "format": "integer[]",
                  "items": {
                    "type": "integer"
                  },
                  "type": "array"
                }
              },
              "required": [
                "user_ids",
                "operation"
              ],
              "type": "object"
            }
          },
          {
            "$ref": "#/parameters/preferParams"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/rpc/document_function": {
      "get": {
        "tags": [
          "(rpc) document_function"
        ],
        "produces": [
          "application/json",
          "application/vnd.pgrst.object+json;nulls=stripped",
          "application/vnd.pgrst.object+json"
        ],
        "parameters": [
          {
            "format": "text",
            "in": "query",
            "name": "func_name",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "post": {
        "tags": [
          "(rpc) document_function"
        ],
        "produces": [
          "application/json",
          "application/vnd.pgrst.object+json;nulls=stripped",
          "application/vnd.pgrst.object+json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "args",
            "required": true,
            "schema": {
              "properties": {
                "func_name": {
                  "format": "text",
                  "type": "string"
                }
              },
              "required": [
                "func_name"
              ],
              "type": "object"
            }
          },
          {
            "$ref": "#/parameters/preferParams"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    }
  },
  "definitions": {
    "notes": {
      "required": [
        "id",
        "title"
      ],
      "properties": {
        "id": {
          "description": "Note:\nThis is a Primary Key.\u003Cpk/\u003E",
          "format": "integer",
          "type": "integer"
        },
        "title": {
          "format": "character varying",
          "maxLength": 255,
          "type": "string"
        },
        "content": {
          "format": "text",
          "type": "string"
        },
        "user_id": {
          "format": "integer",
          "type": "integer"
        },
        "created_at": {
          "default": "now()",
          "format": "timestamp with time zone",
          "type": "string"
        }
      },
      "type": "object"
    }
  },
  "parameters": {
    "preferParams": {
      "name": "Prefer",
      "description": "Preference",
      "required": false,
      "enum": [
        "params=single-object"
      ],
      "in": "header",
      "type": "string"
    },
    "preferReturn": {
      "name": "Prefer",
      "description": "Preference",
      "required": false,
      "enum": [
        "return=representation",
        "return=minimal",
        "return=none"
      ],
      "in": "header",
      "type": "string"
    },
    "preferCount": {
      "name": "Prefer",
      "description": "Preference",
      "required": false,
      "enum": [
        "count=none"
      ],
      "in": "header",
      "type": "string"
    },
    "preferPost": {
      "name": "Prefer",
      "description": "Preference",
      "required": false,
      "enum": [
        "return=representation",
        "return=minimal",
        "return=none",
        "resolution=ignore-duplicates",
        "resolution=merge-duplicates"
      ],
      "in": "header",
      "type": "string"
    },
    "select": {
      "name": "select",
      "description": "Filtering Columns",
      "required": false,
      "in": "query",
      "type": "string"
    },
    "on_conflict": {
      "name": "on_conflict",
      "description": "On Conflict",
      "required": false,
      "in": "query",
      "type": "string"
    },
    "order": {
      "name": "order",
      "description": "Ordering",
      "required": false,
      "in": "query",
      "type": "string"
    },
    "range": {
      "name": "Range",
      "description": "Limiting and Pagination",
      "required": false,
      "in": "header",
      "type": "string"
    },
    "rangeUnit": {
      "name": "Range-Unit",
      "description": "Limiting and Pagination",
      "required": false,
      "default": "items",
      "in": "header",
      "type": "string"
    },
    "offset": {
      "name": "offset",
      "description": "Limiting and Pagination",
      "required": false,
      "in": "query",
      "type": "string"
    },
    "limit": {
      "name": "limit",
      "description": "Limiting and Pagination",
      "required": false,
      "in": "query",
      "type": "string"
    },
    "body.notes": {
      "name": "notes",
      "description": "notes",
      "required": false,
      "in": "body",
      "schema": {
        "$ref": "#/definitions/notes"
      }
    },
    "rowFilter.notes.id": {
      "name": "id",
      "required": false,
      "format": "integer",
      "in": "query",
      "type": "string"
    },
    "rowFilter.notes.title": {
      "name": "title",
      "required": false,
      "format": "character varying",
      "in": "query",
      "type": "string"
    },
    "rowFilter.notes.content": {
      "name": "content",
      "required": false,
      "format": "text",
      "in": "query",
      "type": "string"
    },
    "rowFilter.notes.user_id": {
      "name": "user_id",
      "required": false,
      "format": "integer",
      "in": "query",
      "type": "string"
    },
    "rowFilter.notes.created_at": {
      "name": "created_at",
      "required": false,
      "format": "timestamp with time zone",
      "in": "query",
      "type": "string"
    }
  },
  "externalDocs": {
    "description": "PostgREST Documentation",
    "url": "https://postgrest.org/en/v12.0/api.html"
  }
}